[tool.poetry]
name = "src"
version = "0.1.0"
description = ""
authors = ["Kieran Pritchard <kieran.pritchard@ons.gov.uk>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
streamlit = "^1.36.0"
boto3 = "^1.34.135"
pandas = "^2.2.2"
plotly = "^5.22.0"
github-api-toolkit = { git = "https://github.com/ONS-Innovation/github-api-package.git", tag = "v1.0.0" }

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
ruff = "^0.6.5"
pylint = "^3.2.7"
mypy = "^1.11.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    # Enabling ALL is not recommended it will implicitly enable new rules after upgrade.
    # "ALL",

    # Ruff rules: https://docs.astral.sh/ruff/rules/

    "E",      # pycodestyle erros
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "I",      # isort
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "C4",     # flake8-comprehensions
    "S",      # flake8-bandit
    "D",      # pydocstyle - Enforce existing docstrings only
    "C90",    # mccabe
    "RUF",    # Ruff specific rules

    # PL - Pylint is only partially supported, we also use the pylint tool to catch all the rules.
    # It is enabled here to take advantage of the ruff's speed.
    "PL",
]

ignore = [
    # Conflicts with google docstring style
    "D205",
    # Allow missing docstring, remove to enforce docstrings across the board
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # Disable line length check as it is handled by black
    # :TODO: Remove E501 when ruff supports all black rules
    "E501",
    # indentation contains tabs
    "W191",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # Allow use of assert statements in tests
    "S101",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
# Global mypy options
no_implicit_optional = "True"
ignore_missing_imports = "True"
warn_unused_configs = "True"
warn_no_return = "False"
warn_unused_ignores = "True"
warn_return_any = "True"
warn_redundant_casts = "True"
disallow_untyped_defs = "True"
disallow_untyped_calls = "True"
disallow_incomplete_defs = "True"
strict_equality = "True"
