resources:
- name: resource-repo
  type: git
  icon: github
  source:
    uri: https://github.com/ONS-Innovation/github-policy-dashboard
    username: ((github_access_token))
    password: x-oauth-basic
    branch: ((branch))

jobs:
- name:  build-and-push
  public: true
  plan:
  - get: resource-repo
    timeout: 5m
  - task: build-image
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hashicorp/terraform
      inputs:
      - name: resource-repo
      params:
        aws_account_id: ((aws_account_sdp_((env))))
        aws_role_arn: arn:aws:iam::((aws_account_sdp_((env)))):role/sdp-concourse-((env))
        secrets: ((sdp_((env))_github_policy_dashboard_secrets))
      run: # binary used to build the image
        path: sh
        args:
        - -cx
        - |
          apk add --no-cache aws-cli podman jq iptables curl

          export repo_name=((repo_name))
          chmod u+x ./resource-repo/concourse/scripts/policy_util.sh
          source ./resource-repo/concourse/scripts/policy_util.sh
          if [[ "((env))" == "prod" ]]; then
            tag=$(curl "https://api.github.com/repos/ONS-Innovation/github-policy-dashboard/releases" | jq -r '.[0].tag_name')
            export tag
          else
            export tag=((tag))
          fi
          git rev-parse --abbrev-ref HEAD
          chmod u+x ./resource-repo/concourse/scripts/assume_role.sh
          chmod u+x ./resource-repo/concourse/scripts/build_image.sh
          source ./resource-repo/concourse/scripts/assume_role.sh
          ./resource-repo/concourse/scripts/build_image.sh
    timeout: 10m
  - task: terraform
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: hashicorp/terraform}
      inputs:
      - name: resource-repo
      params:
        secrets: ((sdp_((env))_github_policy_dashboard_secrets))
        github_access_token: ((github_access_token))
      run:
        path: sh
        args:
        - -cx
        - |
          apk add --no-cache jq curl

          export repo_name=((repo_name))
          chmod u+x ./resource-repo/concourse/scripts/policy_util.sh
          source ./resource-repo/concourse/scripts/policy_util.sh
          if [[ "((env))" == "prod" ]]; then
            tag=$(curl "https://api.github.com/repos/ONS-Innovation/github-policy-dashboard/releases" | jq -r '.[0].tag_name')
            export tag
          else 
            export tag=((tag))
          fi
          chmod u+x ./resource-repo/concourse/scripts/terraform_infra.sh
          export env=((env))
          ./resource-repo/concourse/scripts/terraform_infra.sh
    timeout: 30m